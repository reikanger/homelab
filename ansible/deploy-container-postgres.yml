---
- name: Create and manage Podman containers
  hosts: prod
  collections:
    - containers.podman

  vars:
    container_name: "postgresql"
    container_image: "docker.io/postgres:latest"
    user: "reika"
    user_group: "reika"
    postgres_user: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38653666306537323039656234613565323965613065373435653331313630303762303738633131
          6631303066303230373263323934366666363035376163330a393034323031303230646435363938
          33306437656434663561636261316336633033626435393363633335656336613762653337633934
          6530623765643464300a666634353239363734353833613036663134656133303565616231643364
          3235
    postgres_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          31663033633432363462336666316339393339353263663738323636323333346261306434653335
          6337363265323934393934623132333231646231656537660a616461343334396238386436353163
          37356163643861356562393063363562393936633630313435376165633230313861316334313934
          3138646636306363380a646363623838353333623262323239343666653466343235383939363137
          37633839666638366662356332306161353036313336316634656333666265626165616135663165
          3963383337326338623736386531323864323662386234356135

  tasks:
    - name: Create a Podman volume for postgres data
      podman_volume:
        name: postgres_data

    - name: Create Podman container (rootless)
      podman_container:
        name: "{{ container_name }}"
        image: "{{ container_image }}"
        labels:
          io.containers.autoupdate: registry
        state: created
        restart_policy: unless-stopped
        env:
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_pass }}"
          PGDATA: "/var/lib/postgresql/data/pgdata"
        ports:
          - "5432:5432"
        volumes:
          - "postgres_data:/var/lib/postgresql/data:Z"

    - name: Generate systemd unit file for container
      podman_generate_systemd:
        name: "{{ container_name }}"
        new: true
        no_header: true
        dest: "/home/{{ user }}/.config/systemd/user/"

    - name: Ensure container is started and enabled
      systemd:
        name: "container-{{ container_name }}.service"
        scope: user
        daemon_reload: true
        state: started
        enabled: true

